select * from olympic_history;
select * from olympic_history_noc_region;
1. How many olympics games have been held?
select count(distinct games) as total_oly_games from 
olympic_history;

2. List down all Olympics games held so far
select distinct year, season, games, city
from olympic_history
order by 1;

3. Mention the total no of nations who participated in each olympics game?
select oh.games,count(distinct nr.region) as total_countries
from olympic_history as oh
inner join olympic_history_noc_region as nr
on oh.noc=nr.noc
group by 1;
######################
with all_count as (select oh.games,nr.region from olympic_history as oh
                  join olympic_history_noc_region as nr
                  on oh.noc=nr.noc
                  group by 1,2
                  order by 1)
                  select games,count(1) 
                  from all_count
                  group by 1
                  order by 1;

4. Which year saw the highest and lowest no of countries participating in olympics?
Problem Statement: Write a SQL query to return the Olympic Games which had the 
highest participating countries and the lowest participating countries.

with hl as (select year,count(distinct region) as country from
            olympic_history as oh
            join olympic_history_noc_region as nr
            on oh.noc=nr.noc
            group by 1)
            select min(country),max(country)
            from hl;
####################################
with hl as (select games,region as country from
            olympic_history as oh
            join olympic_history_noc_region as nr
            on oh.noc=nr.noc
            group by 1,2),
        tot_count as (select games,count(country) as total_countries
                     from hl
                     group by 1)
          select distinct concat(first_value(games)over(order by total_countries),'-',
                        first_value(total_countries)over(order by total_countries)) as lowest_country,
                 concat(first_value(games)over(order by total_countries desc),'-',
                        first_value(total_countries)over(order by total_countries desc)) as highest_country
                 from tot_count
                 order by 1;
  
 
 5. Which nation has participated in all of the olympic games?
 Problem Statement: SQL query to return the list of 
 countries who have been part of every Olympics games.
 with tot_game as (
     select count(distinct games) as g from olympic_history),
 country_part as(select nr.region,count(distinct oh.games)as cc from olympic_history as oh
 join olympic_history_noc_region as nr
 on oh.noc=nr.noc
 group by 1)
 select c.* from country_part as c
 join tot_game as t
 on t.g=c.cc;
 
 ############################
 6. Identify the sport which was played in all summer olympics.

Problem Statement: 
SQL query to fetch the list of all sports which have been part of every olympics.
 select * from olympic_history;
with tot as (select count(distinct games) as ga from olympic_history
            where season = 'Summer'),
 sumr as(
   select sport,games from olympic_history
 where season = 'Summer'
     group by 1,2
     ),
  cnt as (select sport,count(games) as g
          
         from sumr
         group by 1)
     select sport,c.g,t.ga from cnt as c
     join tot as t
     on c.g=t.ga
     ;
 
 
  with t1 as
          	(select count(distinct games) as total_games
          	from olympic_history where season = 'Summer'),
          t2 as
          	(select distinct games, sport
          	from olympic_history where season = 'Summer'),
          t3 as
          	(select sport, count(1) as no_of_games
          	from t2
          	group by sport)
      select *
      from t3
      join t1 on t1.total_games = t3.no_of_games;
 
############################################## 
 7. Which Sports were just played only once in the olympics.

Problem Statement: Using SQL query, 
Identify the sport which were just played once in all of olympics.

with t1 as (select  distinct games,sport from olympic_history),
t2 as (select sport,count(1) as no_of_games from t1
       
       group by 1
       )
       select t.*,tt.games from t2 as t
       join t1 as tt
       on t.sport=tt.sport
       where no_of_games=1
       order by 1
       ;
#######################################
8. Fetch the total no of sports played in each olympic games.

Problem Statement: 
Write SQL query to fetch the total no of sports played in each olympics.
select * from olympic_history;

select games,count(distinct sport) from olympic_history
group by 1
order by 2 desc;

 with t1 as
      	(select distinct games, sport
      	from olympic_history),
        t2 as
      	(select games, count(1) as no_of_sports
      	from t1
      	group by games)
      select * from t2
      order by no_of_sports desc;
#########################################
9. Fetch oldest athletes to win a gold medal

Problem Statement:
SQL Query to fetch the details of the oldest athletes to win a gold medal at the olympics.
select * from olympic_history;

with team as (
select name,sex,age,team,games,city,sport,event,medal from olympic_history
    where medal='gold'
),
ag as (select max(age) as age from olympic_history
      where medal='gold')
  select * from team as t
  join ag as a on a.age=t.age;
###################################
with gold as (select name,sex,cast(case when age='NA' then '0' else age end as int)as age
              ,team,games,city,sport, event, medal
            from olympic_history),
 ranking as (select *,rank()over(order by age desc) rnk from gold
            where medal='Gold')
            select * from ranking
            where rnk = 1;
            
10. Find the Ratio of male and female athletes participated in all olympic games.

Problem Statement: Write a SQL query to get the ratio of male and female participants 
  
with rtio as (select sex,count(*)as c from olympic_history
             group by 1),
             cal as (select *,row_number()over(order by c) rn from rtio)
             ,
             cnt_f as (select c from cal where rn=1),
             cnt_m as (select c from cal where rn=2)
        select round(cnt_m.c/cnt_f.c,2) from cnt_f,cnt_m;

11. Fetch the top 5 athletes who have won the most gold medals.

Problem Statement: SQL query to fetch the top 5 athletes who have won the most gold medals.  
  
 with play as (select name,team,count(1) as tt from olympic_history where medal='Gold' group by 1,2),
 cnt as (select *,dense_rank()over(order by tt desc) as r from play)
        select name,team,tt from cnt
         where r<=5;
  
12. Fetch the top 5 athletes who have won the most medals (gold/silver/bronze).

Problem Statement: 
SQL Query to fetch the top 5 athletes who have won the most medals (Medals include gold, silver and bronze). 

select * from olympic_history;
with ath as (select name,team,count(medal)as total_medals from olympic_history
            where medal in ('Gold','Silver','Bronze')
            group by 1,2)
     select * from ath
                   order by 3 desc
                   limit 5   #this will just take top 5 players but not including same medal count players
#################
with ath as (select name,team,count(medal)as total_medals from olympic_history
            where medal in ('Gold','Silver','Bronze')
            group by 1,2),
     filterplayer as (select *,dense_rank()over(order by total_medals desc)a from ath)
     select name,team,total_medals 
     from filterplayer
     where a<=5;
  
13. Fetch the top 5 most successful countries in olympics. Success is defined by no of medals won.

Problem Statement: 
Write a SQL query to fetch the top 5 most successful countries in olympics. (Success is defined by no of medals won). 
select * from olympic_history_noc_region;

with base as (select region,count(medal)as total_medal from 
olympic_history as oh
join olympic_history_noc_region as nr
on oh.noc=nr.noc
              where medal != 'NA'
group by 1),
success as (select *,dense_rank()over(order by total_medal desc) as rnk
           from base)
           select * from success
           where rnk<=5;
           
14. List down total gold, silver and bronze medals won by each country.

Problem Statement: Write a SQL query to list down the  total gold, silver and bronze medals won by each country.           
 with base as (select region,case when medal='Gold' then 'Gold' else 'other' end as Gold,
              case when medal='Silver' then 'Silver' else 'other' end as Silver,
              case when medal='Bronze' then 'Bronze' else 'other' end as Bronze
              from olympic_history as oh
               join olympic_history_noc_region as nr
               on oh.noc=nr.noc
              where medal != 'NA'),
               cnt as (select region,sum(case when Silver='Silver' then 1 else 0 end)as total_silver,
                      sum(case when Gold='Gold' then 1 else 0 end)as total_gold,
                       sum(case when Bronze='Bronze' then 1 else 0 end)as total_bronze
                       from base
                       group by 1
                       order by 2 desc,3 desc,4 desc
                      )
                      select * from cnt;

15. List down total gold, silver and bronze medals won by each country corresponding to each olympic games.

Problem Statement: 
Write a SQL query to list down the  total gold, silver and bronze medals won by each
country corresponding to each olympic games.
 with base as (select region,games,case when medal='Gold' then 'Gold' else 'other' end as Gold,
              case when medal='Silver' then 'Silver' else 'other' end as Silver,
              case when medal='Bronze' then 'Bronze' else 'other' end as Bronze
              from olympic_history as oh
               join olympic_history_noc_region as nr
               on oh.noc=nr.noc
              where medal != 'NA'
              ),
               cnt as (select region,games,sum(case when Silver='Silver' then 1 else 0 end)as total_silver,
                      sum(case when Gold='Gold' then 1 else 0 end)as total_gold,
                       sum(case when Bronze='Bronze' then 1 else 0 end)as total_bronze
                       from base
                       group by 1,2
                       order by 2
                      )
                      select * from cnt;


